var _user$project$Main$OperationNames = F5(
	function (a, b, c, d, e) {
		return {operation: a, string: b, hash: c, symbol: d, label: e};
	});
var _user$project$Main$DividedBy = {ctor: 'DividedBy'};
var _user$project$Main$Times = {ctor: 'Times'};
var _user$project$Main$Minus = {ctor: 'Minus'};
var _user$project$Main$Plus = {ctor: 'Plus'};
var _user$project$Main$operationGrid = A2(
	_elm_lang$core$List$map,
	function (_p0) {
		var _p1 = _p0;
		var _p3 = _p1._1;
		var _p2 = _p1._0;
		return {
			operation: _p2,
			string: _elm_lang$core$Basics$toString(_p2),
			hash: A2(
				_elm_lang$core$Basics_ops['++'],
				'#',
				_elm_lang$core$Basics$toString(_p2)),
			symbol: _p3,
			label: A2(
				_elm_lang$core$Basics_ops['++'],
				_p3,
				A2(_elm_lang$core$Basics_ops['++'], ' ', _p1._2))
		};
	},
	{
		ctor: '::',
		_0: {ctor: '_Tuple3', _0: _user$project$Main$Plus, _1: '+', _2: 'Addition'},
		_1: {
			ctor: '::',
			_0: {ctor: '_Tuple3', _0: _user$project$Main$Minus, _1: '-', _2: 'Subtraction'},
			_1: {
				ctor: '::',
				_0: {ctor: '_Tuple3', _0: _user$project$Main$Times, _1: 'x', _2: 'Multiplication'},
				_1: {
					ctor: '::',
					_0: {ctor: '_Tuple3', _0: _user$project$Main$DividedBy, _1: 'รท', _2: 'Division'},
					_1: {ctor: '[]'}
				}
			}
		}
	});
var _user$project$Main$test = A5(
	_user$project$FindRecord$findRecord,
	function (_) {
		return _.string;
	},
	'',
	function (_) {
		return _.symbol;
	},
	'#PlusQ',
	_user$project$Main$operationGrid);
var _user$project$Main$main = _elm_lang$html$Html$beginnerProgram(
	{
		model: 0,
		view: function (_p4) {
			return _elm_lang$html$Html$text(_user$project$Main$test);
		},
		update: F2(
			function (_p5, b) {
				return b;
			})
	})();
